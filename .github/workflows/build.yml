name: Add binaries to release
run-name: Add binaries to release ${{ github.event.release.tag_name }}

on:
  release:
    types:
      - created

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write

jobs:
  upload:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            output-name: sshnp-linux-x64
            ext: ''
            bundle: 'shell'
          - os: macos-13
            output-name: sshnp-macos-x64
            ext: ''
            bundle: 'shell'
          - os: macos-14
            output-name: sshnp-macos-arm64
            ext: ''
            bundle: 'shell'
          - os: windows-latest
            output-name: sshnp-windows-x64
            ext: '.exe'
            bundle: 'windows'
    runs-on: ${{ matrix.os }}-latest
    name: Upload ${{ matrix.os }} binaries to release ${{ github.event.release.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1.6.5
        with:
          sdk: stable
      - name: compile and upload
        shell: bash
        run: |
          cd packages/dart/twh_tools
          mkdir twh
          dart pub get
          dart analyze
          export DART_BINS=$(ls bin/*.dart)
          for dart_file in $DART_BINS; do
              echo "Compiling $dart_file"
              bin_name=${dart_file//.dart}
              bin_name=$bin_name${{ matrix.ext }}
              dart compile exe -o twh/$bin_name $dart_file
          done
          chmod +x twh/*
          export TARGET_GZ=${{ matrix.os }}_${{ github.event.release.tag_name }}.tar.gz
          tar -czvf $TARGET_GZ twh/*
          gh release upload ${{ github.event.release.tag_name }} $TARGET_GZ
    